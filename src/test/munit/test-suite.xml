<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
    xmlns:account-system-api="http://www.mulesoft.org/schema/mule/account-system-api"
    xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
    xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
    xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/account-system-api http://www.mulesoft.org/schema/mule/account-system-api/current/mule-account-system-api.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <munit:config name="test-suite.xml" />
    <configuration-properties doc:name="Configuration properties"
        doc:id="f2abde13-ccde-46c7-b2c4-f40a09d0cd19" file="mule.test.properties" />
    <http:request-config name="HTTP_Request_configuration"
        doc:name="HTTP Request configuration" doc:id="f3684d38-27f4-432b-8840-ea123ad6ab78"
        basePath="api">
        <http:request-connection host="${api.domain}"
            port="${http.port}" />
    </http:request-config>
	<munit:before-test name="test-suiteBefore_Test"
        description="Before tests actions" doc:id="421baef7-03b0-4c2c-b9e2-d8009e03f2bc">
        <set-variable value="#[uuid()[0 to 7]]" doc:name="Set Variable randomId"
            doc:id="da2abdad-e3a9-4512-9ecd-6c6ba5e01050" variableName="randomId" />
        <ee:transform doc:name="Prepare test data"
            doc:id="9ad38c68-900f-4b52-ab85-75e85cca9c0e">
            <ee:message>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="testDataForInsert"><![CDATA[%dw 2.0
output application/json
---
{
  "name": vars.randomId ++ "_name",
  "email": vars.randomId ++ "_test@testemail.com",
  "billingAddress": {
    "street": vars.randomId ++ "_b_street"
  },
  "shippingAddress": {
    "street": vars.randomId ++ "_s_street",
    "city": vars.randomId ++ "_s_city",
  }
}]]></ee:set-variable>
                <ee:set-variable variableName="testDataForUpdate"><![CDATA[%dw 2.0
output application/json
---
{
  "name": vars.randomId ++ "_name_update",
  "email": vars.randomId ++ "_test_update@testemail.com",
  "billingAddress": {
    "street": vars.randomId ++ "_b_street_update"
  },
  "shippingAddress": {
    "street": vars.randomId ++ "_s_street_update",
    "city": vars.randomId ++ "_s_city_update",
  }
}]]></ee:set-variable>
                <ee:set-variable variableName="addressToChange"><![CDATA[%dw 2.0
output application/json
---
{
"billingAddress": {
    "street": vars.randomId ++ "_changed_street"
  }
}]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <account-system-api:create-account
            doc:name="Create test account for insert in system A"
            doc:id="751d2fd3-4eeb-45db-9c50-f68033a1f7aa" config-ref="Account_SFDC_System_A_API_Config">
            <account-system-api:create-account-request-data><![CDATA[#[vars.testDataForInsert]]]></account-system-api:create-account-request-data>
        </account-system-api:create-account>
		<ee:transform doc:name="Store created ID" doc:id="1d9cbb52-c89d-448f-b357-9d4a741678d5" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="createdIds" ><![CDATA[%dw 2.0
output application/json
---
[payload.id]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<account-system-api:create-account
            doc:name="Create test account for update in system A"
            doc:id="9c0eddbc-730d-4ffd-ac85-8f6c07a3fdd4" config-ref="Account_SFDC_System_A_API_Config">
            <account-system-api:create-account-request-data><![CDATA[#[vars.testDataForUpdate - "billingAddress" ++ vars.addressToChange]]]></account-system-api:create-account-request-data>
        </account-system-api:create-account>
        <ee:transform doc:name="Store created ID" doc:id="aa2e3c66-4df2-4d35-af4d-1987fda7cf82" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="createdIds" ><![CDATA[%dw 2.0
output application/json
---
vars.createdIds + payload.id]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<account-system-api:create-account
            doc:name="Create test account for update in system B"
            doc:id="f3074c0a-2a53-40ce-bb12-f661faee288a" config-ref="Account_SFDC_System_B_API_Config">
            <account-system-api:create-account-request-data><![CDATA[#[vars.testDataForUpdate]]]></account-system-api:create-account-request-data>
        </account-system-api:create-account>
        <ee:transform doc:name="Store created ID" doc:id="ae793e85-861d-42f3-95e8-bae326254419">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="createdIds" ><![CDATA[%dw 2.0
output application/json
---
vars.createdIds + payload.id]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
    </munit:before-test>
    <munit:test name="test-suiteTest" description="MUnit Test"
        doc:id="25af8cda-c775-4514-bddb-6dbd81ee6aaa">
        <munit:enable-flow-sources >
			<munit:enable-flow-source value="account-migration-process-api-main" />
			<munit:enable-flow-source value="account-migration-process-api-console" />
			<munit:enable-flow-source value="post:\migrateAccounts:account-migration-process-api-config" />
		</munit:enable-flow-sources>
		<munit:execution>
            <scripting:execute engine="groovy"
                doc:name="Sleep for 10 seconds" doc:id="49a9e69e-881e-4fe8-9fcd-475b0feeaca5">
                <scripting:code>sleep(10000)</scripting:code>
            </scripting:execute>
            <ee:transform doc:name="Set required Dates parameters" doc:id="80654ce7-8cfe-483e-97b0-50d24064a807" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="modifiedBefore" ><![CDATA[%dw 2.0
output text/plain
---
(now() as LocalDateTime)]]></ee:set-variable>
					<ee:set-variable variableName="modifiedAfter" ><![CDATA[%dw 2.0
output text/plain
---
((now() - |PT5M|) as LocalDateTime)]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<http:request method="POST"
                doc:name="Migrate test data for insert" doc:id="ab7b8a96-3117-4ff4-801e-f5a861c4f49a"
                config-ref="HTTP_Request_configuration" path="/migrateAccounts">
                <http:query-params><![CDATA[#[output application/java
---
{
	"modifiedBefore" : vars.modifiedBefore,
	"name" : vars.testDataForInsert.name,
	"modifiedAfter" : vars.modifiedAfter
}]]]></http:query-params>
            </http:request>
            <scripting:execute engine="groovy"
                doc:name="Sleep for 10 seconds" doc:id="5c24c23f-c56a-480b-98f4-b4d68ac03880">
                <scripting:code>sleep(10000)</scripting:code>
            </scripting:execute>
            <http:request method="POST"
                doc:name="Migrate test data for update" doc:id="36086a77-861a-48a3-bf11-8b3b3a6e6ae4"
                config-ref="HTTP_Request_configuration" path="/migrateAccounts">
                <http:query-params><![CDATA[#[output application/java
---
{
	"name" : vars.testDataForUpdate.name,
	"modifiedBefore" : vars.modifiedBefore,
	"modifiedAfter" : vars.modifiedAfter
}]]]></http:query-params>
            </http:request>
            <scripting:execute engine="groovy"
                doc:name="Sleep for 10 seconds" doc:id="0c999a37-a50f-4ed0-bccb-19a5ceec5f1c">
                <scripting:code>sleep(10000)</scripting:code>
            </scripting:execute>
			<account-system-api:get-accounts doc:name="Get inserted B account" doc:id="414a3a6a-fe1e-49e8-b915-9123fdfbbcb7" config-ref="Account_SFDC_System_B_API_Config" name="#[vars.testDataForInsert.name]" target="insertedAccountB" />
			<account-system-api:get-accounts doc:name="Get updated B account" doc:id="4f78ce6e-52f2-48f4-b926-9b0bcc2ba19d" config-ref="Account_SFDC_System_B_API_Config" name="#[vars.testDataForUpdate.name]" target="updatedAccountB" />
			<ee:transform doc:name="Store ID" doc:id="ed6b0560-5135-4940-9ab4-293ed87cb6bb" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="createdIds" ><![CDATA[%dw 2.0
output application/json
---
vars.createdIds + vars.insertedAccountB[0].id]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<scripting:execute engine="groovy" doc:name="Sleep for 10 seconds" doc:id="29057cab-a310-4b51-8125-d72b8d2c7a87" >
				<scripting:code >sleep(10000)</scripting:code>
			</scripting:execute>
        </munit:execution>
        <munit:validation>
			<munit-tools:assert-that doc:name="Assert that account was migrated to system B" doc:id="da2e8579-0c75-41a8-afa0-24195b8900c9" expression="#[isEmpty(vars.insertedAccountB)]" is="#[MunitTools::equalTo(false)]" message="Account was not migrated to system B"/>
			<munit-tools:assert-that doc:name="Assert that account was updated in system B" doc:id="221756c8-3ff4-4791-a263-ece8c81d4850" expression="#[vars.updatedAccountB[0].billingAddress.street]" is="#[MunitTools::equalTo(vars.addressToChange.billingAddress.street)]" message="Account was not updated in system B" />
        </munit:validation>
    </munit:test>
	<munit:after-test name="test-suiteAfter_Test" description="After tests actions" doc:id="f374ab71-f1e9-4f37-8566-b11534f166af" >
		<account-system-api:delete-account-by-id doc:name="Delete created account from A" doc:id="cbea7c10-f627-4459-908c-e72caa88544a" config-ref="Account_SFDC_System_A_API_Config" id="#[vars.createdIds[0]]"/>
		<account-system-api:delete-account-by-id doc:name="Delete created account by id from A" doc:id="80bca4ea-97dd-4284-b886-f1d6503057d1" config-ref="Account_SFDC_System_A_API_Config" id="#[vars.createdIds[1]]"/>
		<account-system-api:delete-account-by-id doc:name="Delete created account from B" doc:id="3ac930b5-77d6-4087-8031-0e8f7c4a3862" config-ref="Account_SFDC_System_B_API_Config" id="#[vars.createdIds[2]]"/>
		<account-system-api:delete-account-by-id doc:name="Delete created account by id from B" doc:id="b4619870-7e4d-45b3-afbd-de5d3a9cde76" config-ref="Account_SFDC_System_B_API_Config" id="#[vars.createdIds[3]]"/>  
	</munit:after-test>
</mule>
