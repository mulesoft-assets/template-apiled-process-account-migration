<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <apikit:config name="process-api-config" raml="process-api.raml" consoleEnabled="true" consolePath="console" doc:name="Router"/>
    <http:request-config name="HTTP_Request_Configuration_Source_B" host="0.0.0.0" port="${system.api.b.http.port}" doc:name="HTTP Request Configuration" basePath="${system.api.b.basePath}">
        <http:raml-api-configuration location="system-api.raml"/>

    </http:request-config>
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration" basePath="${api.basePath}"/>
    <http:request-config name="HTTP_Request_Configuration_Source_A" host="0.0.0.0" port="${system.api.a.http.port}" doc:name="HTTP Request Configuration" basePath="${system.api.a.basePath}">
        <http:raml-api-configuration location="system-api.raml"/>
    </http:request-config>
    <flow name="process-api-main">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/*" doc:name="HTTP"/>
        <apikit:router config-ref="process-api-config" doc:name="APIkit Router"/>
        <exception-strategy ref="process-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="post:/migrateAccounts:process-api-config">
        <http:request config-ref="HTTP_Request_Configuration_Source_A" path="/accounts" method="GET" doc:name="Get account from specified date">
            <http:request-builder>
                <http:query-param paramName="modifiedAfter" value="#[message.inboundProperties.'http.query.params'.get(&quot;modifiedAfter&quot;)]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform response to array of Accounts">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map $]]></dw:set-payload>
        </dw:transform-message>
        <foreach collection="#[payload]" doc:name="For Each Account">
            <enricher source="#[payload]" target="#[flowVars.accountId]" doc:name="Set the accountId">
                <processor-chain doc:name="Processor Chain">
                    <http:request config-ref="HTTP_Request_Configuration_Source_B" path="/accounts/{id}" method="GET" metadata:id="21a13388-e059-4666-a53b-bb4adc9b91ed" doc:name="Get the account with specific ID">
                        <http:request-builder>
                            <http:uri-param paramName="id" value="#[payload.id]"/>
                        </http:request-builder>
                        <http:success-status-code-validator values="200,404"/>
                    </http:request>
                    <json:json-to-object-transformer doc:name="JSON to Object"/>
                    <dw:transform-message doc:name="Get ID from the response">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.id]]></dw:set-payload>
                    </dw:transform-message>
                </processor-chain>
            </enricher>
            <json:object-to-json-transformer doc:name="Object to JSON"/>
            <choice doc:name="Does Account exists?">
                <when expression="#[flowVars.accountId != null]">
                    <http:request config-ref="HTTP_Request_Configuration_Source_B" path="/accounts/{id}" method="PUT" doc:name="Update account">
                        <http:request-builder>
                            <http:uri-param paramName="id" value="#[flowVars.accountId]"/>
                        </http:request-builder>
                    </http:request>
                    <logger message="Account with ID #[flowVars.accountId] was updated successfully." level="INFO" doc:name="Log the update"/>
                </when>
                <otherwise>
                    <http:request config-ref="HTTP_Request_Configuration_Source_B" path="/accounts" method="POST" doc:name="Create account"/>
                    <dw:transform-message doc:name="Get ID of the new customer">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.id]]></dw:set-payload>
                    </dw:transform-message>
                    <logger message="Account with ID #[payload] was created successfully." level="INFO" doc:name="Log the creation"/>
                </otherwise>
            </choice>
        </foreach>
        <dw:transform-message doc:name="Prepare response JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message: "Accounts were successfully migrated."
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <apikit:mapping-exception-strategy name="process-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
    </mule>
